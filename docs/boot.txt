AlphaZ的启动步骤

AlphaZ的启动分为三步：
    一、BIOS自动调用软盘第一个扇区到内存0x7c00地址处，并将执行权交给0x7c00处。第一个扇区也叫
       MBR分区，里面包含了FAT12文件系统的头部信息以及相关的启动代码。由于MBR分区大小有限，代
       码所能实现的功能很少，其主要功能是使用有限的空间将loader加载进内存。
    二、由于对loader的大小没有过多限制，所以loader所能实现的工作比较多，loader负责将kernel
       加载进内存，获取内存相关信息，初始化页表，进入保护模式等工作。当所有工作完成后，loader
       将执行权交给kernel。
    三、内核获取控制权后，执行相关的初始化工作，之后创建进程，进入用户态。至此启动完毕。


AlphaZ内核直接管理物理内存，尽管在内核态也使用页表，但是内核的页表采用与物理内存一一映射的方式，
这种管理方式管理起来比较简单方便。当前AlphaZ的内存分布如下：

                                high address

                     |                              |
                     |         freedom alloc        |
                     |                              |   系统可自由分配的内存
            0x500000 +------------------------------+
                     |            mm_map            |
            0x300100 +------------------------------+
                     | Page Table / Kernel.bin Temp |   页表所在的位置 / 内核加载时暂存的地方，之后会调整到正确的位置
            0x200000 +------------------------------+
                     |          Kernel.bin          |
            0x100000 +------------------------------+
                     |          Other Use           |   BIOS等使用的内存
            0x0c0000 +------------------------------+
                     |   Display Adapter Reserved   |   系统用于显示的内存
            0x0a0000 +------------------------------+
                     |            EBDA              |   Extend BIOS Data Area
            0x09fc00 +------------------------------+
                     |          Loader.bin          |   loader加载位置
            0x010000 +------------------------------+
                     |       Kernel Load Temp       |   加载内核时的缓冲区
            0x007e00 +------------------------------+
                     |         Boot Sector          |   MBR分区加载的位置
            0x007c00 +------------------------------+
                     |          Boot Stack          |
                     +------------------------------+
                     |         Memory Info          |   存放内存相关信息供内核使用
            0x000600 +------------------------------+
                     |            Free              |
            0x000500 +------------------------------+
                     |    ROM BIOS Parameter Area   |
            0x000400 +------------------------------+
                     |         Int Vectors          |
            0x000000 +------------------------------+

                                low address
